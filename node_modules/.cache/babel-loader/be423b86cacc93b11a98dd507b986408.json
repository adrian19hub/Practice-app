{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrian.y\\\\Documents\\\\coding\\\\placeholder-app\\\\src\\\\components\\\\ph\\\\UsersList.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from 'react'; // import { useState } from 'react'\n// import { getUsers } from '../../api'\n\nimport { useAppSelector, useUsersDataFromApi } from '../../state/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst findMatchingUsers = (users, searchName) => {\n  return users.filter(user => {\n    if (user.name.toLowerCase().indexOf(searchName.toLowerCase()) > -1) return true;\n    return false;\n  });\n};\n\nconst generateUsersListItems = users => {\n  return users.map(user => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => console.log(user),\n      children: user.name\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  });\n};\n\nconst UsersList = _ref => {\n  _s();\n\n  let {\n    searchName\n  } = _ref;\n  useUsersDataFromApi();\n  const users = useAppSelector(state => state.users.data);\n  const queriedUsers = findMatchingUsers(users, searchName);\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: generateUsersListItems(queriedUsers.length === 0 && !searchName ? users : queriedUsers)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"Gx8aAB8HvClAs8kqBPUiyvaxfLg=\", false, function () {\n  return [useUsersDataFromApi, useAppSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/adrian.y/Documents/coding/placeholder-app/src/components/ph/UsersList.tsx"],"names":["React","useAppSelector","useUsersDataFromApi","findMatchingUsers","users","searchName","filter","user","name","toLowerCase","indexOf","generateUsersListItems","map","console","log","id","UsersList","state","data","queriedUsers","length"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAA+C,OAA/C,C,CACA;AACA;;AACA,SAAyBC,cAAzB,EAAyCC,mBAAzC,QAAoE,mBAApE;;;AAOA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAgBC,UAAhB,KAA8C;AACpE,SAAOD,KAAK,CAACE,MAAN,CAAcC,IAAD,IAAe;AAC/B,QAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCL,UAAU,CAACI,WAAX,EAAhC,IAA4D,CAAC,CAAjE,EAAoE,OAAO,IAAP;AACpE,WAAO,KAAP;AACH,GAHM,CAAP;AAIH,CALD;;AAOA,MAAME,sBAAsB,GAAIP,KAAD,IAAkC;AAC7D,SAAOA,KAAK,CAACQ,GAAN,CAAUL,IAAI,IAAI;AACrB,wBAAO;AAAkB,MAAA,OAAO,EAAE,MAAMM,OAAO,CAACC,GAAR,CAAYP,IAAZ,CAAjC;AAAA,gBAAqDA,IAAI,CAACC;AAA1D,OAASD,IAAI,CAACQ,EAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,CAAP;AAGH,CAJD;;AAMA,MAAMC,SAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACX,IAAAA;AAAD,GAAiB;AAC3CH,EAAAA,mBAAmB;AACnB,QAAME,KAAK,GAAGH,cAAc,CAAEgB,KAAK,IAAIA,KAAK,CAACb,KAAN,CAAYc,IAAvB,CAA5B;AACA,QAAMC,YAAoB,GAAGhB,iBAAiB,CAACC,KAAD,EAAQC,UAAR,CAA9C;AAEA,sBACI;AAAA,cACKM,sBAAsB,CACnBQ,YAAY,CAACC,MAAb,KAAwB,CAAxB,IAA6B,CAACf,UAA9B,GACED,KADF,GAEEe,YAHiB;AAD3B;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAdD;;GAAMH,S;UACFd,mB,EACcD,c;;;KAFZe,S;AAgBN,eAAeA,SAAf","sourcesContent":["/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { FC, useEffect, useState } from 'react'\r\n// import { useState } from 'react'\r\n// import { getUsers } from '../../api'\r\nimport { useAppDispatch, useAppSelector, useUsersDataFromApi } from '../../state/hooks'\r\nimport User from '../../models/User'\r\n\r\ninterface Props {\r\n    searchName:string;\r\n}\r\n\r\nconst findMatchingUsers = (users: User[], searchName:string): User[] => {\r\n    return users.filter((user: User)=> {\r\n        if (user.name.toLowerCase().indexOf(searchName.toLowerCase()) > -1) return true;\r\n        return false\r\n    })    \r\n}\r\n\r\nconst generateUsersListItems = (users: User[]): JSX.Element[] => {\r\n    return users.map(user => {\r\n        return <li key={user.id} onClick={() => console.log(user)}>{user.name}</li>\r\n    })\r\n}\r\n\r\nconst UsersList: FC<Props> = ({searchName}) => {\r\n    useUsersDataFromApi()\r\n    const users = useAppSelector((state => state.users.data))\r\n    const queriedUsers: User[] = findMatchingUsers(users, searchName)\r\n    \r\n    return (\r\n        <ol>\r\n            {generateUsersListItems(\r\n                queriedUsers.length === 0 && !searchName \r\n                ? users \r\n                : queriedUsers)}\r\n            \r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n"]},"metadata":{},"sourceType":"module"}