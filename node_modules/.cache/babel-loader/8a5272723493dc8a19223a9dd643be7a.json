{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport usersReducer from './slices/usersSlice';\nexport const store = configureStore({\n  reducer: {\n    // posts: postsReducer,\n    // comments: commentsReducer,\n    users: usersReducer\n  }\n}); // Infer the `RootState` and `AppDispatch` types from the store itself","map":{"version":3,"sources":["X:/Adrian/learning/projects/placeholder-app/src/state/store.ts"],"names":["configureStore","usersReducer","store","reducer","users"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAClCG,EAAAA,OAAO,EAAE;AACP;AACA;AACAC,IAAAA,KAAK,EAAEH;AAHA;AADyB,CAAD,CAA5B,C,CAQP","sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport usersReducer from './slices/usersSlice'\r\nexport const store = configureStore({\r\n  reducer: {\r\n    // posts: postsReducer,\r\n    // comments: commentsReducer,\r\n    users: usersReducer,\r\n  },\r\n})\r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type AppDispatch = typeof store.dispatch"]},"metadata":{},"sourceType":"module"}