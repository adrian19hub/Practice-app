{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// Define the initial state using that type\nconst initialState = {\n  data: []\n};\nexport const UsersSlice = createSlice({\n  name: 'users',\n  // `createSlice` will infer the state type from the `initialState` argument\n  initialState,\n  reducers: {\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    addUsers: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n});\nexport const {\n  addUsers\n} = UsersSlice.actions; // Other code such as selectors can use the imported `RootState` type\n\nexport const selectUsers = state => state.users;\nexport default UsersSlice.reducer;","map":{"version":3,"sources":["X:/Adrian/learning/projects/placeholder-app/src/state/slices/usersSlice.ts"],"names":["createSlice","initialState","data","UsersSlice","name","reducers","addUsers","state","action","payload","actions","selectUsers","users","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA;AACA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE;AADyB,CAAjC;AAIA,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,OAD8B;AAEpC;AACAH,EAAAA,YAHoC;AAIpCI,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAA0C;AAClDD,MAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACC,OAApB;AACD;AAJO;AAJ0B,CAAD,CAA9B;AAYP,OAAO,MAAM;AAAEH,EAAAA;AAAF,IAAeH,UAAU,CAACO,OAAhC,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAIJ,KAAD,IAAsBA,KAAK,CAACK,KAAhD;AAEP,eAAeT,UAAU,CAACU,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { User } from '../../api/api'\r\nimport type { RootState } from '../store'\r\n\r\n// Define a type for the slice state\r\ninterface UsersState {\r\n  data: User[]\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: UsersState = {\r\n  data: [],\r\n}\r\n\r\nexport const UsersSlice = createSlice({\r\n  name: 'users',\r\n  // `createSlice` will infer the state type from the `initialState` argument\r\n  initialState,\r\n  reducers: {\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    addUsers: (state, action: PayloadAction<User[]>) => {\r\n      state.data = action.payload\r\n    }\r\n  },\r\n})\r\n\r\nexport const { addUsers } = UsersSlice.actions\r\n\r\n// Other code such as selectors can use the imported `RootState` type\r\nexport const selectUsers = (state: RootState) => state.users\r\n\r\nexport default UsersSlice.reducer"]},"metadata":{},"sourceType":"module"}