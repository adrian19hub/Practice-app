{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getUsers } from '../api'; // Use throughout your app instead of plain `useDispatch` and `useSelector`\n\nexport const useAppDispatch = () => {\n  _s();\n\n  return useDispatch();\n};\n\n_s(useAppDispatch, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n  return [useDispatch];\n});\n\nexport const useAppSelector = useSelector;\nexport const useUsersApi = () => {\n  _s2();\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    getUsers().then(data => dispatch(addUsers(data)));\n  }, []);\n};\n\n_s2(useUsersApi, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});","map":{"version":3,"sources":["C:/Users/Adrian/Desktop/Programming/Projects/typescript-test/src/state/hooks.ts"],"names":["useDispatch","useSelector","useEffect","getUsers","useAppDispatch","useAppSelector","useUsersApi","dispatch","then","data","addUsers"],"mappings":";;;AAAA,SAA+BA,WAA/B,EAA4CC,WAA5C,QAA+D,aAA/D;AAEA,SAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,QAAvB,C,CACA;;AACA,OAAO,MAAMC,cAAc,GAAG;AAAA;;AAAA,SAAMJ,WAAW,EAAjB;AAAA,CAAvB;;GAAMI,c;UAAuBJ,W;;;AACpC,OAAO,MAAMK,cAA+C,GAAGJ,WAAxD;AAGP,OAAO,MAAMK,WAAqB,GAAG,MAAY;AAAA;;AAC7C,QAAMC,QAAQ,GAAGH,cAAc,EAA/B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,QAAQ,GAAGK,IAAX,CAAgBC,IAAI,IAAIF,QAAQ,CAACG,QAAQ,CAACD,IAAD,CAAT,CAAhC;AACH,GAFQ,EAEN,EAFM,CAAT;AAGH,CANM;;IAAMH,W;UACQF,c","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\nimport React, {useEffect} from 'react'\r\nimport {getUsers} from '../api'\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\n\r\nexport const useUsersApi: Function = (): void => {\r\n    const dispatch = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        getUsers().then(data => dispatch(addUsers(data)))\r\n    }, [])\r\n}"]},"metadata":{},"sourceType":"module"}