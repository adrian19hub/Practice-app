{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adrian.y\\\\Documents\\\\coding\\\\placeholder-app\\\\src\\\\components\\\\ph\\\\UsersList.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable array-callback-return */\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React from 'react'; // import { useState } from 'react'\n// import { getUsers } from '../../api'\n\nimport { useAppSelector, useUsersDataFromApi } from '../../state/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst findMatchingUsers = users => {\n  return users.filter(user => {\n    if (user.name.toLowerCase().indexOf(searchName.toLowerCase()) > -1) return true;\n    return false;\n  });\n};\n\nconst UsersList = _ref => {\n  _s();\n\n  let {\n    searchName\n  } = _ref;\n  const users = useAppSelector(state => state.users.data);\n  useUsersDataFromApi();\n  const queriedUsers = findMatchingUsers(users);\n\n  const generateUsersListItems = users => {\n    return users.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    children: generateUsersListItems(queriedUsers.length === 0 && !searchName ? users : queriedUsers)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"LmyNgKZp9m99Ip0W+cn9KYtOI9w=\", false, function () {\n  return [useAppSelector, useUsersDataFromApi];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"sources":["C:/Users/adrian.y/Documents/coding/placeholder-app/src/components/ph/UsersList.tsx"],"names":["React","useAppSelector","useUsersDataFromApi","findMatchingUsers","users","filter","user","name","toLowerCase","indexOf","searchName","UsersList","state","data","queriedUsers","generateUsersListItems","map","id","length"],"mappings":";;;AAAA;;AACA;;AACA;AACA,OAAOA,KAAP,MAA+C,OAA/C,C,CACA;AACA;;AACA,SAAyBC,cAAzB,EAAyCC,mBAAzC,QAAoE,mBAApE;;;AAOA,MAAMC,iBAAiB,GAAIC,KAAD,IAA2B;AACjD,SAAOA,KAAK,CAACC,MAAN,CAAcC,IAAD,IAAe;AAC/B,QAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,OAAxB,CAAgCC,UAAU,CAACF,WAAX,EAAhC,IAA4D,CAAC,CAAjE,EAAoE,OAAO,IAAP;AACpE,WAAO,KAAP;AACH,GAHM,CAAP;AAIH,CALD;;AAOA,MAAMG,SAAoB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACD,IAAAA;AAAD,GAAiB;AAC3C,QAAMN,KAAK,GAAGH,cAAc,CAAEW,KAAK,IAAIA,KAAK,CAACR,KAAN,CAAYS,IAAvB,CAA5B;AAEAX,EAAAA,mBAAmB;AAGnB,QAAMY,YAAoB,GAAGX,iBAAiB,CAACC,KAAD,CAA9C;;AAEA,QAAMW,sBAAsB,GAAIX,KAAD,IAAkC;AAC7D,WAAOA,KAAK,CAACY,GAAN,CAAUV,IAAI,IAAI;AACrB,0BAAO;AAAA,kBAAmBA,IAAI,CAACC;AAAxB,SAASD,IAAI,CAACW,EAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAMA,sBACI;AAAA,cACKF,sBAAsB,CACnBD,YAAY,CAACI,MAAb,KAAwB,CAAxB,IAA6B,CAACR,UAA9B,GACEN,KADF,GAEEU,YAHiB;AAD3B;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvBD;;GAAMH,S;UACYV,c,EAEdC,mB;;;KAHES,S;AAyBN,eAAeA,SAAf","sourcesContent":["/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport React, { FC, useEffect, useState } from 'react'\r\n// import { useState } from 'react'\r\n// import { getUsers } from '../../api'\r\nimport { useAppDispatch, useAppSelector, useUsersDataFromApi } from '../../state/hooks'\r\nimport User from '../../models/User'\r\n\r\ninterface Props {\r\n    searchName:string;\r\n}\r\n\r\nconst findMatchingUsers = (users: User[]): User[] => {\r\n    return users.filter((user: User)=> {\r\n        if (user.name.toLowerCase().indexOf(searchName.toLowerCase()) > -1) return true;\r\n        return false\r\n    })    \r\n}\r\n\r\nconst UsersList: FC<Props> = ({searchName}) => {\r\n    const users = useAppSelector((state => state.users.data))\r\n\r\n    useUsersDataFromApi()\r\n\r\n    \r\n    const queriedUsers: User[] = findMatchingUsers(users)\r\n\r\n    const generateUsersListItems = (users: User[]): JSX.Element[] => {\r\n        return users.map(user => {\r\n            return <li key={user.id}>{user.name}</li>\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <ol>\r\n            {generateUsersListItems(\r\n                queriedUsers.length === 0 && !searchName \r\n                ? users \r\n                : queriedUsers)}\r\n            \r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n"]},"metadata":{},"sourceType":"module"}